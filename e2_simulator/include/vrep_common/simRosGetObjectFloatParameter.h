/* Auto-generated by genmsg_cpp for file /home/jackal/ros_workspace/src/vrep/vrep_common/srv/simRosGetObjectFloatParameter.srv */
#ifndef VREP_COMMON_SERVICE_SIMROSGETOBJECTFLOATPARAMETER_H
#define VREP_COMMON_SERVICE_SIMROSGETOBJECTFLOATPARAMETER_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace vrep_common
{
template <class ContainerAllocator>
struct simRosGetObjectFloatParameterRequest_ {
  typedef simRosGetObjectFloatParameterRequest_<ContainerAllocator> Type;

  simRosGetObjectFloatParameterRequest_()
  : handle(0)
  , parameterID(0)
  {
  }

  simRosGetObjectFloatParameterRequest_(const ContainerAllocator& _alloc)
  : handle(0)
  , parameterID(0)
  {
  }

  typedef int32_t _handle_type;
  int32_t handle;

  typedef int32_t _parameterID_type;
  int32_t parameterID;


  typedef boost::shared_ptr< ::vrep_common::simRosGetObjectFloatParameterRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosGetObjectFloatParameterRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosGetObjectFloatParameterRequest
typedef  ::vrep_common::simRosGetObjectFloatParameterRequest_<std::allocator<void> > simRosGetObjectFloatParameterRequest;

typedef boost::shared_ptr< ::vrep_common::simRosGetObjectFloatParameterRequest> simRosGetObjectFloatParameterRequestPtr;
typedef boost::shared_ptr< ::vrep_common::simRosGetObjectFloatParameterRequest const> simRosGetObjectFloatParameterRequestConstPtr;


template <class ContainerAllocator>
struct simRosGetObjectFloatParameterResponse_ {
  typedef simRosGetObjectFloatParameterResponse_<ContainerAllocator> Type;

  simRosGetObjectFloatParameterResponse_()
  : result(0)
  , parameterValue(0.0)
  {
  }

  simRosGetObjectFloatParameterResponse_(const ContainerAllocator& _alloc)
  : result(0)
  , parameterValue(0.0)
  {
  }

  typedef int32_t _result_type;
  int32_t result;

  typedef float _parameterValue_type;
  float parameterValue;


  typedef boost::shared_ptr< ::vrep_common::simRosGetObjectFloatParameterResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosGetObjectFloatParameterResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosGetObjectFloatParameterResponse
typedef  ::vrep_common::simRosGetObjectFloatParameterResponse_<std::allocator<void> > simRosGetObjectFloatParameterResponse;

typedef boost::shared_ptr< ::vrep_common::simRosGetObjectFloatParameterResponse> simRosGetObjectFloatParameterResponsePtr;
typedef boost::shared_ptr< ::vrep_common::simRosGetObjectFloatParameterResponse const> simRosGetObjectFloatParameterResponseConstPtr;

struct simRosGetObjectFloatParameter
{

typedef simRosGetObjectFloatParameterRequest Request;
typedef simRosGetObjectFloatParameterResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct simRosGetObjectFloatParameter
} // namespace vrep_common

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetObjectFloatParameterRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetObjectFloatParameterRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosGetObjectFloatParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "233ddb8f8f3678af5672087de7d603db";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectFloatParameterRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x233ddb8f8f3678afULL;
  static const uint64_t static_value2 = 0x5672087de7d603dbULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosGetObjectFloatParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjectFloatParameterRequest";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectFloatParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosGetObjectFloatParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
int32 handle\n\
int32 parameterID\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectFloatParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosGetObjectFloatParameterRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetObjectFloatParameterResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetObjectFloatParameterResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosGetObjectFloatParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "4f3b3d2d178d987bbf7b54667db48dc8";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectFloatParameterResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x4f3b3d2d178d987bULL;
  static const uint64_t static_value2 = 0xbf7b54667db48dc8ULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosGetObjectFloatParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjectFloatParameterResponse";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectFloatParameterResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosGetObjectFloatParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 result\n\
float32 parameterValue\n\
\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectFloatParameterResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosGetObjectFloatParameterResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosGetObjectFloatParameterRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.handle);
    stream.next(m.parameterID);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosGetObjectFloatParameterRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosGetObjectFloatParameterResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result);
    stream.next(m.parameterValue);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosGetObjectFloatParameterResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<vrep_common::simRosGetObjectFloatParameter> {
  static const char* value() 
  {
    return "edd72a73282db218f389ebdcac7cbdd8";
  }

  static const char* value(const vrep_common::simRosGetObjectFloatParameter&) { return value(); } 
};

template<>
struct DataType<vrep_common::simRosGetObjectFloatParameter> {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjectFloatParameter";
  }

  static const char* value(const vrep_common::simRosGetObjectFloatParameter&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosGetObjectFloatParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "edd72a73282db218f389ebdcac7cbdd8";
  }

  static const char* value(const vrep_common::simRosGetObjectFloatParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosGetObjectFloatParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjectFloatParameter";
  }

  static const char* value(const vrep_common::simRosGetObjectFloatParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosGetObjectFloatParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "edd72a73282db218f389ebdcac7cbdd8";
  }

  static const char* value(const vrep_common::simRosGetObjectFloatParameterResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosGetObjectFloatParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjectFloatParameter";
  }

  static const char* value(const vrep_common::simRosGetObjectFloatParameterResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // VREP_COMMON_SERVICE_SIMROSGETOBJECTFLOATPARAMETER_H

