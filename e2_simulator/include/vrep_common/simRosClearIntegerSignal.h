/* Auto-generated by genmsg_cpp for file /home/jackal/ros_workspace/src/vrep/vrep_common/srv/simRosClearIntegerSignal.srv */
#ifndef VREP_COMMON_SERVICE_SIMROSCLEARINTEGERSIGNAL_H
#define VREP_COMMON_SERVICE_SIMROSCLEARINTEGERSIGNAL_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace vrep_common
{
template <class ContainerAllocator>
struct simRosClearIntegerSignalRequest_ {
  typedef simRosClearIntegerSignalRequest_<ContainerAllocator> Type;

  simRosClearIntegerSignalRequest_()
  : signalName()
  {
  }

  simRosClearIntegerSignalRequest_(const ContainerAllocator& _alloc)
  : signalName(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _signalName_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  signalName;


  typedef boost::shared_ptr< ::vrep_common::simRosClearIntegerSignalRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosClearIntegerSignalRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosClearIntegerSignalRequest
typedef  ::vrep_common::simRosClearIntegerSignalRequest_<std::allocator<void> > simRosClearIntegerSignalRequest;

typedef boost::shared_ptr< ::vrep_common::simRosClearIntegerSignalRequest> simRosClearIntegerSignalRequestPtr;
typedef boost::shared_ptr< ::vrep_common::simRosClearIntegerSignalRequest const> simRosClearIntegerSignalRequestConstPtr;


template <class ContainerAllocator>
struct simRosClearIntegerSignalResponse_ {
  typedef simRosClearIntegerSignalResponse_<ContainerAllocator> Type;

  simRosClearIntegerSignalResponse_()
  : result(0)
  {
  }

  simRosClearIntegerSignalResponse_(const ContainerAllocator& _alloc)
  : result(0)
  {
  }

  typedef int32_t _result_type;
  int32_t result;


  typedef boost::shared_ptr< ::vrep_common::simRosClearIntegerSignalResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosClearIntegerSignalResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosClearIntegerSignalResponse
typedef  ::vrep_common::simRosClearIntegerSignalResponse_<std::allocator<void> > simRosClearIntegerSignalResponse;

typedef boost::shared_ptr< ::vrep_common::simRosClearIntegerSignalResponse> simRosClearIntegerSignalResponsePtr;
typedef boost::shared_ptr< ::vrep_common::simRosClearIntegerSignalResponse const> simRosClearIntegerSignalResponseConstPtr;

struct simRosClearIntegerSignal
{

typedef simRosClearIntegerSignalRequest Request;
typedef simRosClearIntegerSignalResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct simRosClearIntegerSignal
} // namespace vrep_common

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosClearIntegerSignalRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosClearIntegerSignalRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosClearIntegerSignalRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "00c43203ad474c6ce746089e83166bba";
  }

  static const char* value(const  ::vrep_common::simRosClearIntegerSignalRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x00c43203ad474c6cULL;
  static const uint64_t static_value2 = 0xe746089e83166bbaULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosClearIntegerSignalRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosClearIntegerSignalRequest";
  }

  static const char* value(const  ::vrep_common::simRosClearIntegerSignalRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosClearIntegerSignalRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
string signalName\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosClearIntegerSignalRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosClearIntegerSignalResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosClearIntegerSignalResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosClearIntegerSignalResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "034a8e20d6a306665e3a5b340fab3f09";
  }

  static const char* value(const  ::vrep_common::simRosClearIntegerSignalResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x034a8e20d6a30666ULL;
  static const uint64_t static_value2 = 0x5e3a5b340fab3f09ULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosClearIntegerSignalResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosClearIntegerSignalResponse";
  }

  static const char* value(const  ::vrep_common::simRosClearIntegerSignalResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosClearIntegerSignalResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 result\n\
\n\
\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosClearIntegerSignalResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosClearIntegerSignalResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosClearIntegerSignalRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.signalName);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosClearIntegerSignalRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosClearIntegerSignalResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosClearIntegerSignalResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<vrep_common::simRosClearIntegerSignal> {
  static const char* value() 
  {
    return "78c7f457aa3ca9421b43a9c08cf8400a";
  }

  static const char* value(const vrep_common::simRosClearIntegerSignal&) { return value(); } 
};

template<>
struct DataType<vrep_common::simRosClearIntegerSignal> {
  static const char* value() 
  {
    return "vrep_common/simRosClearIntegerSignal";
  }

  static const char* value(const vrep_common::simRosClearIntegerSignal&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosClearIntegerSignalRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "78c7f457aa3ca9421b43a9c08cf8400a";
  }

  static const char* value(const vrep_common::simRosClearIntegerSignalRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosClearIntegerSignalRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosClearIntegerSignal";
  }

  static const char* value(const vrep_common::simRosClearIntegerSignalRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosClearIntegerSignalResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "78c7f457aa3ca9421b43a9c08cf8400a";
  }

  static const char* value(const vrep_common::simRosClearIntegerSignalResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosClearIntegerSignalResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosClearIntegerSignal";
  }

  static const char* value(const vrep_common::simRosClearIntegerSignalResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // VREP_COMMON_SERVICE_SIMROSCLEARINTEGERSIGNAL_H

