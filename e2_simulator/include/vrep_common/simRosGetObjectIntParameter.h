/* Auto-generated by genmsg_cpp for file /home/jackal/ros_workspace/src/vrep/vrep_common/srv/simRosGetObjectIntParameter.srv */
#ifndef VREP_COMMON_SERVICE_SIMROSGETOBJECTINTPARAMETER_H
#define VREP_COMMON_SERVICE_SIMROSGETOBJECTINTPARAMETER_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace vrep_common
{
template <class ContainerAllocator>
struct simRosGetObjectIntParameterRequest_ {
  typedef simRosGetObjectIntParameterRequest_<ContainerAllocator> Type;

  simRosGetObjectIntParameterRequest_()
  : handle(0)
  , parameterID(0)
  {
  }

  simRosGetObjectIntParameterRequest_(const ContainerAllocator& _alloc)
  : handle(0)
  , parameterID(0)
  {
  }

  typedef int32_t _handle_type;
  int32_t handle;

  typedef int32_t _parameterID_type;
  int32_t parameterID;


  typedef boost::shared_ptr< ::vrep_common::simRosGetObjectIntParameterRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosGetObjectIntParameterRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosGetObjectIntParameterRequest
typedef  ::vrep_common::simRosGetObjectIntParameterRequest_<std::allocator<void> > simRosGetObjectIntParameterRequest;

typedef boost::shared_ptr< ::vrep_common::simRosGetObjectIntParameterRequest> simRosGetObjectIntParameterRequestPtr;
typedef boost::shared_ptr< ::vrep_common::simRosGetObjectIntParameterRequest const> simRosGetObjectIntParameterRequestConstPtr;


template <class ContainerAllocator>
struct simRosGetObjectIntParameterResponse_ {
  typedef simRosGetObjectIntParameterResponse_<ContainerAllocator> Type;

  simRosGetObjectIntParameterResponse_()
  : result(0)
  , parameterValue(0)
  {
  }

  simRosGetObjectIntParameterResponse_(const ContainerAllocator& _alloc)
  : result(0)
  , parameterValue(0)
  {
  }

  typedef int32_t _result_type;
  int32_t result;

  typedef int32_t _parameterValue_type;
  int32_t parameterValue;


  typedef boost::shared_ptr< ::vrep_common::simRosGetObjectIntParameterResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosGetObjectIntParameterResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosGetObjectIntParameterResponse
typedef  ::vrep_common::simRosGetObjectIntParameterResponse_<std::allocator<void> > simRosGetObjectIntParameterResponse;

typedef boost::shared_ptr< ::vrep_common::simRosGetObjectIntParameterResponse> simRosGetObjectIntParameterResponsePtr;
typedef boost::shared_ptr< ::vrep_common::simRosGetObjectIntParameterResponse const> simRosGetObjectIntParameterResponseConstPtr;

struct simRosGetObjectIntParameter
{

typedef simRosGetObjectIntParameterRequest Request;
typedef simRosGetObjectIntParameterResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct simRosGetObjectIntParameter
} // namespace vrep_common

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetObjectIntParameterRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetObjectIntParameterRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosGetObjectIntParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "233ddb8f8f3678af5672087de7d603db";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectIntParameterRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x233ddb8f8f3678afULL;
  static const uint64_t static_value2 = 0x5672087de7d603dbULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosGetObjectIntParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjectIntParameterRequest";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectIntParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosGetObjectIntParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
int32 handle\n\
int32 parameterID\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectIntParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosGetObjectIntParameterRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetObjectIntParameterResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetObjectIntParameterResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosGetObjectIntParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "6c2f4c807e1ab6d671a7c18b9d47ce4a";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectIntParameterResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x6c2f4c807e1ab6d6ULL;
  static const uint64_t static_value2 = 0x71a7c18b9d47ce4aULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosGetObjectIntParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjectIntParameterResponse";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectIntParameterResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosGetObjectIntParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 result\n\
int32 parameterValue\n\
\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectIntParameterResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosGetObjectIntParameterResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosGetObjectIntParameterRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.handle);
    stream.next(m.parameterID);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosGetObjectIntParameterRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosGetObjectIntParameterResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result);
    stream.next(m.parameterValue);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosGetObjectIntParameterResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<vrep_common::simRosGetObjectIntParameter> {
  static const char* value() 
  {
    return "8372aeda509849308ae25567cba4e30f";
  }

  static const char* value(const vrep_common::simRosGetObjectIntParameter&) { return value(); } 
};

template<>
struct DataType<vrep_common::simRosGetObjectIntParameter> {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjectIntParameter";
  }

  static const char* value(const vrep_common::simRosGetObjectIntParameter&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosGetObjectIntParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "8372aeda509849308ae25567cba4e30f";
  }

  static const char* value(const vrep_common::simRosGetObjectIntParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosGetObjectIntParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjectIntParameter";
  }

  static const char* value(const vrep_common::simRosGetObjectIntParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosGetObjectIntParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "8372aeda509849308ae25567cba4e30f";
  }

  static const char* value(const vrep_common::simRosGetObjectIntParameterResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosGetObjectIntParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjectIntParameter";
  }

  static const char* value(const vrep_common::simRosGetObjectIntParameterResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // VREP_COMMON_SERVICE_SIMROSGETOBJECTINTPARAMETER_H

