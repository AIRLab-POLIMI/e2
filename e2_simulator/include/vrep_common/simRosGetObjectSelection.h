/* Auto-generated by genmsg_cpp for file /home/jackal/ros_workspace/src/vrep/vrep_common/srv/simRosGetObjectSelection.srv */
#ifndef VREP_COMMON_SERVICE_SIMROSGETOBJECTSELECTION_H
#define VREP_COMMON_SERVICE_SIMROSGETOBJECTSELECTION_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace vrep_common
{
template <class ContainerAllocator>
struct simRosGetObjectSelectionRequest_ {
  typedef simRosGetObjectSelectionRequest_<ContainerAllocator> Type;

  simRosGetObjectSelectionRequest_()
  {
  }

  simRosGetObjectSelectionRequest_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::vrep_common::simRosGetObjectSelectionRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosGetObjectSelectionRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosGetObjectSelectionRequest
typedef  ::vrep_common::simRosGetObjectSelectionRequest_<std::allocator<void> > simRosGetObjectSelectionRequest;

typedef boost::shared_ptr< ::vrep_common::simRosGetObjectSelectionRequest> simRosGetObjectSelectionRequestPtr;
typedef boost::shared_ptr< ::vrep_common::simRosGetObjectSelectionRequest const> simRosGetObjectSelectionRequestConstPtr;


template <class ContainerAllocator>
struct simRosGetObjectSelectionResponse_ {
  typedef simRosGetObjectSelectionResponse_<ContainerAllocator> Type;

  simRosGetObjectSelectionResponse_()
  : handles()
  {
  }

  simRosGetObjectSelectionResponse_(const ContainerAllocator& _alloc)
  : handles(_alloc)
  {
  }

  typedef std::vector<int32_t, typename ContainerAllocator::template rebind<int32_t>::other >  _handles_type;
  std::vector<int32_t, typename ContainerAllocator::template rebind<int32_t>::other >  handles;


  typedef boost::shared_ptr< ::vrep_common::simRosGetObjectSelectionResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosGetObjectSelectionResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosGetObjectSelectionResponse
typedef  ::vrep_common::simRosGetObjectSelectionResponse_<std::allocator<void> > simRosGetObjectSelectionResponse;

typedef boost::shared_ptr< ::vrep_common::simRosGetObjectSelectionResponse> simRosGetObjectSelectionResponsePtr;
typedef boost::shared_ptr< ::vrep_common::simRosGetObjectSelectionResponse const> simRosGetObjectSelectionResponseConstPtr;

struct simRosGetObjectSelection
{

typedef simRosGetObjectSelectionRequest Request;
typedef simRosGetObjectSelectionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct simRosGetObjectSelection
} // namespace vrep_common

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetObjectSelectionRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetObjectSelectionRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosGetObjectSelectionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectSelectionRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosGetObjectSelectionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjectSelectionRequest";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectSelectionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosGetObjectSelectionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectSelectionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosGetObjectSelectionRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetObjectSelectionResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetObjectSelectionResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosGetObjectSelectionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "1b24af430705cefc484ff6cc1c5669ad";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectSelectionResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x1b24af430705cefcULL;
  static const uint64_t static_value2 = 0x484ff6cc1c5669adULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosGetObjectSelectionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjectSelectionResponse";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectSelectionResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosGetObjectSelectionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32[] handles\n\
\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectSelectionResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosGetObjectSelectionRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosGetObjectSelectionRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosGetObjectSelectionResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.handles);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosGetObjectSelectionResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<vrep_common::simRosGetObjectSelection> {
  static const char* value() 
  {
    return "1b24af430705cefc484ff6cc1c5669ad";
  }

  static const char* value(const vrep_common::simRosGetObjectSelection&) { return value(); } 
};

template<>
struct DataType<vrep_common::simRosGetObjectSelection> {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjectSelection";
  }

  static const char* value(const vrep_common::simRosGetObjectSelection&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosGetObjectSelectionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "1b24af430705cefc484ff6cc1c5669ad";
  }

  static const char* value(const vrep_common::simRosGetObjectSelectionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosGetObjectSelectionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjectSelection";
  }

  static const char* value(const vrep_common::simRosGetObjectSelectionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosGetObjectSelectionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "1b24af430705cefc484ff6cc1c5669ad";
  }

  static const char* value(const vrep_common::simRosGetObjectSelectionResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosGetObjectSelectionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjectSelection";
  }

  static const char* value(const vrep_common::simRosGetObjectSelectionResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // VREP_COMMON_SERVICE_SIMROSGETOBJECTSELECTION_H

