/* Auto-generated by genmsg_cpp for file /home/jackal/ros_workspace/src/vrep/vrep_common/srv/simRosGetArrayParameter.srv */
#ifndef VREP_COMMON_SERVICE_SIMROSGETARRAYPARAMETER_H
#define VREP_COMMON_SERVICE_SIMROSGETARRAYPARAMETER_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace vrep_common
{
template <class ContainerAllocator>
struct simRosGetArrayParameterRequest_ {
  typedef simRosGetArrayParameterRequest_<ContainerAllocator> Type;

  simRosGetArrayParameterRequest_()
  : parameter(0)
  {
  }

  simRosGetArrayParameterRequest_(const ContainerAllocator& _alloc)
  : parameter(0)
  {
  }

  typedef int32_t _parameter_type;
  int32_t parameter;


  typedef boost::shared_ptr< ::vrep_common::simRosGetArrayParameterRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosGetArrayParameterRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosGetArrayParameterRequest
typedef  ::vrep_common::simRosGetArrayParameterRequest_<std::allocator<void> > simRosGetArrayParameterRequest;

typedef boost::shared_ptr< ::vrep_common::simRosGetArrayParameterRequest> simRosGetArrayParameterRequestPtr;
typedef boost::shared_ptr< ::vrep_common::simRosGetArrayParameterRequest const> simRosGetArrayParameterRequestConstPtr;


template <class ContainerAllocator>
struct simRosGetArrayParameterResponse_ {
  typedef simRosGetArrayParameterResponse_<ContainerAllocator> Type;

  simRosGetArrayParameterResponse_()
  : result(0)
  , parameterValues()
  {
  }

  simRosGetArrayParameterResponse_(const ContainerAllocator& _alloc)
  : result(0)
  , parameterValues(_alloc)
  {
  }

  typedef int32_t _result_type;
  int32_t result;

  typedef std::vector<float, typename ContainerAllocator::template rebind<float>::other >  _parameterValues_type;
  std::vector<float, typename ContainerAllocator::template rebind<float>::other >  parameterValues;


  typedef boost::shared_ptr< ::vrep_common::simRosGetArrayParameterResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosGetArrayParameterResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosGetArrayParameterResponse
typedef  ::vrep_common::simRosGetArrayParameterResponse_<std::allocator<void> > simRosGetArrayParameterResponse;

typedef boost::shared_ptr< ::vrep_common::simRosGetArrayParameterResponse> simRosGetArrayParameterResponsePtr;
typedef boost::shared_ptr< ::vrep_common::simRosGetArrayParameterResponse const> simRosGetArrayParameterResponseConstPtr;

struct simRosGetArrayParameter
{

typedef simRosGetArrayParameterRequest Request;
typedef simRosGetArrayParameterResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct simRosGetArrayParameter
} // namespace vrep_common

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetArrayParameterRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetArrayParameterRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosGetArrayParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "3b5e34835331aac7a9065c5abd204e3b";
  }

  static const char* value(const  ::vrep_common::simRosGetArrayParameterRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x3b5e34835331aac7ULL;
  static const uint64_t static_value2 = 0xa9065c5abd204e3bULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosGetArrayParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetArrayParameterRequest";
  }

  static const char* value(const  ::vrep_common::simRosGetArrayParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosGetArrayParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
int32 parameter\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosGetArrayParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosGetArrayParameterRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetArrayParameterResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetArrayParameterResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosGetArrayParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e497cd253c2e34372eda1afd9473563a";
  }

  static const char* value(const  ::vrep_common::simRosGetArrayParameterResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xe497cd253c2e3437ULL;
  static const uint64_t static_value2 = 0x2eda1afd9473563aULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosGetArrayParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetArrayParameterResponse";
  }

  static const char* value(const  ::vrep_common::simRosGetArrayParameterResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosGetArrayParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 result\n\
float32[] parameterValues\n\
\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosGetArrayParameterResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosGetArrayParameterRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.parameter);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosGetArrayParameterRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosGetArrayParameterResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result);
    stream.next(m.parameterValues);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosGetArrayParameterResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<vrep_common::simRosGetArrayParameter> {
  static const char* value() 
  {
    return "eb14c535a1358defa0617c252d433144";
  }

  static const char* value(const vrep_common::simRosGetArrayParameter&) { return value(); } 
};

template<>
struct DataType<vrep_common::simRosGetArrayParameter> {
  static const char* value() 
  {
    return "vrep_common/simRosGetArrayParameter";
  }

  static const char* value(const vrep_common::simRosGetArrayParameter&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosGetArrayParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "eb14c535a1358defa0617c252d433144";
  }

  static const char* value(const vrep_common::simRosGetArrayParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosGetArrayParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetArrayParameter";
  }

  static const char* value(const vrep_common::simRosGetArrayParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosGetArrayParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "eb14c535a1358defa0617c252d433144";
  }

  static const char* value(const vrep_common::simRosGetArrayParameterResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosGetArrayParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetArrayParameter";
  }

  static const char* value(const vrep_common::simRosGetArrayParameterResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // VREP_COMMON_SERVICE_SIMROSGETARRAYPARAMETER_H

