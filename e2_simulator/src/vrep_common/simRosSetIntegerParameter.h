/* Auto-generated by genmsg_cpp for file /home/jackal/ros_workspace/src/vrep/vrep_common/srv/simRosSetIntegerParameter.srv */
#ifndef VREP_COMMON_SERVICE_SIMROSSETINTEGERPARAMETER_H
#define VREP_COMMON_SERVICE_SIMROSSETINTEGERPARAMETER_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace vrep_common
{
template <class ContainerAllocator>
struct simRosSetIntegerParameterRequest_ {
  typedef simRosSetIntegerParameterRequest_<ContainerAllocator> Type;

  simRosSetIntegerParameterRequest_()
  : parameter(0)
  , parameterValue(0)
  {
  }

  simRosSetIntegerParameterRequest_(const ContainerAllocator& _alloc)
  : parameter(0)
  , parameterValue(0)
  {
  }

  typedef int32_t _parameter_type;
  int32_t parameter;

  typedef int32_t _parameterValue_type;
  int32_t parameterValue;


  typedef boost::shared_ptr< ::vrep_common::simRosSetIntegerParameterRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosSetIntegerParameterRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosSetIntegerParameterRequest
typedef  ::vrep_common::simRosSetIntegerParameterRequest_<std::allocator<void> > simRosSetIntegerParameterRequest;

typedef boost::shared_ptr< ::vrep_common::simRosSetIntegerParameterRequest> simRosSetIntegerParameterRequestPtr;
typedef boost::shared_ptr< ::vrep_common::simRosSetIntegerParameterRequest const> simRosSetIntegerParameterRequestConstPtr;


template <class ContainerAllocator>
struct simRosSetIntegerParameterResponse_ {
  typedef simRosSetIntegerParameterResponse_<ContainerAllocator> Type;

  simRosSetIntegerParameterResponse_()
  : result(0)
  {
  }

  simRosSetIntegerParameterResponse_(const ContainerAllocator& _alloc)
  : result(0)
  {
  }

  typedef int32_t _result_type;
  int32_t result;


  typedef boost::shared_ptr< ::vrep_common::simRosSetIntegerParameterResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosSetIntegerParameterResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosSetIntegerParameterResponse
typedef  ::vrep_common::simRosSetIntegerParameterResponse_<std::allocator<void> > simRosSetIntegerParameterResponse;

typedef boost::shared_ptr< ::vrep_common::simRosSetIntegerParameterResponse> simRosSetIntegerParameterResponsePtr;
typedef boost::shared_ptr< ::vrep_common::simRosSetIntegerParameterResponse const> simRosSetIntegerParameterResponseConstPtr;

struct simRosSetIntegerParameter
{

typedef simRosSetIntegerParameterRequest Request;
typedef simRosSetIntegerParameterResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct simRosSetIntegerParameter
} // namespace vrep_common

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetIntegerParameterRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetIntegerParameterRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosSetIntegerParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "cec0b701e35035e7db422e91439b7489";
  }

  static const char* value(const  ::vrep_common::simRosSetIntegerParameterRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xcec0b701e35035e7ULL;
  static const uint64_t static_value2 = 0xdb422e91439b7489ULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosSetIntegerParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetIntegerParameterRequest";
  }

  static const char* value(const  ::vrep_common::simRosSetIntegerParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosSetIntegerParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
int32 parameter\n\
int32 parameterValue\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosSetIntegerParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosSetIntegerParameterRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetIntegerParameterResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetIntegerParameterResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosSetIntegerParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "034a8e20d6a306665e3a5b340fab3f09";
  }

  static const char* value(const  ::vrep_common::simRosSetIntegerParameterResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x034a8e20d6a30666ULL;
  static const uint64_t static_value2 = 0x5e3a5b340fab3f09ULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosSetIntegerParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetIntegerParameterResponse";
  }

  static const char* value(const  ::vrep_common::simRosSetIntegerParameterResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosSetIntegerParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 result\n\
\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosSetIntegerParameterResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosSetIntegerParameterResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosSetIntegerParameterRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.parameter);
    stream.next(m.parameterValue);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosSetIntegerParameterRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosSetIntegerParameterResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosSetIntegerParameterResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<vrep_common::simRosSetIntegerParameter> {
  static const char* value() 
  {
    return "f3c5433e44d0019f0b3eade90114da07";
  }

  static const char* value(const vrep_common::simRosSetIntegerParameter&) { return value(); } 
};

template<>
struct DataType<vrep_common::simRosSetIntegerParameter> {
  static const char* value() 
  {
    return "vrep_common/simRosSetIntegerParameter";
  }

  static const char* value(const vrep_common::simRosSetIntegerParameter&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosSetIntegerParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "f3c5433e44d0019f0b3eade90114da07";
  }

  static const char* value(const vrep_common::simRosSetIntegerParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosSetIntegerParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetIntegerParameter";
  }

  static const char* value(const vrep_common::simRosSetIntegerParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosSetIntegerParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "f3c5433e44d0019f0b3eade90114da07";
  }

  static const char* value(const vrep_common::simRosSetIntegerParameterResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosSetIntegerParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetIntegerParameter";
  }

  static const char* value(const vrep_common::simRosSetIntegerParameterResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // VREP_COMMON_SERVICE_SIMROSSETINTEGERPARAMETER_H

