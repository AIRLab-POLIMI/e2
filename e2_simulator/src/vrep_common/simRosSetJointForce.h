/* Auto-generated by genmsg_cpp for file /home/jackal/ros_workspace/src/vrep/vrep_common/srv/simRosSetJointForce.srv */
#ifndef VREP_COMMON_SERVICE_SIMROSSETJOINTFORCE_H
#define VREP_COMMON_SERVICE_SIMROSSETJOINTFORCE_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace vrep_common
{
template <class ContainerAllocator>
struct simRosSetJointForceRequest_ {
  typedef simRosSetJointForceRequest_<ContainerAllocator> Type;

  simRosSetJointForceRequest_()
  : handle(0)
  , forceOrTorque(0.0)
  {
  }

  simRosSetJointForceRequest_(const ContainerAllocator& _alloc)
  : handle(0)
  , forceOrTorque(0.0)
  {
  }

  typedef int32_t _handle_type;
  int32_t handle;

  typedef double _forceOrTorque_type;
  double forceOrTorque;


  typedef boost::shared_ptr< ::vrep_common::simRosSetJointForceRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosSetJointForceRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosSetJointForceRequest
typedef  ::vrep_common::simRosSetJointForceRequest_<std::allocator<void> > simRosSetJointForceRequest;

typedef boost::shared_ptr< ::vrep_common::simRosSetJointForceRequest> simRosSetJointForceRequestPtr;
typedef boost::shared_ptr< ::vrep_common::simRosSetJointForceRequest const> simRosSetJointForceRequestConstPtr;


template <class ContainerAllocator>
struct simRosSetJointForceResponse_ {
  typedef simRosSetJointForceResponse_<ContainerAllocator> Type;

  simRosSetJointForceResponse_()
  : result(0)
  {
  }

  simRosSetJointForceResponse_(const ContainerAllocator& _alloc)
  : result(0)
  {
  }

  typedef int32_t _result_type;
  int32_t result;


  typedef boost::shared_ptr< ::vrep_common::simRosSetJointForceResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosSetJointForceResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosSetJointForceResponse
typedef  ::vrep_common::simRosSetJointForceResponse_<std::allocator<void> > simRosSetJointForceResponse;

typedef boost::shared_ptr< ::vrep_common::simRosSetJointForceResponse> simRosSetJointForceResponsePtr;
typedef boost::shared_ptr< ::vrep_common::simRosSetJointForceResponse const> simRosSetJointForceResponseConstPtr;

struct simRosSetJointForce
{

typedef simRosSetJointForceRequest Request;
typedef simRosSetJointForceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct simRosSetJointForce
} // namespace vrep_common

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetJointForceRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetJointForceRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosSetJointForceRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "0b9990f23344c1e0572cb371bcfde7cf";
  }

  static const char* value(const  ::vrep_common::simRosSetJointForceRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x0b9990f23344c1e0ULL;
  static const uint64_t static_value2 = 0x572cb371bcfde7cfULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosSetJointForceRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetJointForceRequest";
  }

  static const char* value(const  ::vrep_common::simRosSetJointForceRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosSetJointForceRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
int32 handle\n\
float64 forceOrTorque\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosSetJointForceRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosSetJointForceRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetJointForceResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetJointForceResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosSetJointForceResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "034a8e20d6a306665e3a5b340fab3f09";
  }

  static const char* value(const  ::vrep_common::simRosSetJointForceResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x034a8e20d6a30666ULL;
  static const uint64_t static_value2 = 0x5e3a5b340fab3f09ULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosSetJointForceResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetJointForceResponse";
  }

  static const char* value(const  ::vrep_common::simRosSetJointForceResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosSetJointForceResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 result\n\
\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosSetJointForceResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosSetJointForceResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosSetJointForceRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.handle);
    stream.next(m.forceOrTorque);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosSetJointForceRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosSetJointForceResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosSetJointForceResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<vrep_common::simRosSetJointForce> {
  static const char* value() 
  {
    return "fbe07bacf4f20c3b14d370f9a1bdae4e";
  }

  static const char* value(const vrep_common::simRosSetJointForce&) { return value(); } 
};

template<>
struct DataType<vrep_common::simRosSetJointForce> {
  static const char* value() 
  {
    return "vrep_common/simRosSetJointForce";
  }

  static const char* value(const vrep_common::simRosSetJointForce&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosSetJointForceRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "fbe07bacf4f20c3b14d370f9a1bdae4e";
  }

  static const char* value(const vrep_common::simRosSetJointForceRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosSetJointForceRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetJointForce";
  }

  static const char* value(const vrep_common::simRosSetJointForceRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosSetJointForceResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "fbe07bacf4f20c3b14d370f9a1bdae4e";
  }

  static const char* value(const vrep_common::simRosSetJointForceResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosSetJointForceResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetJointForce";
  }

  static const char* value(const vrep_common::simRosSetJointForceResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // VREP_COMMON_SERVICE_SIMROSSETJOINTFORCE_H

