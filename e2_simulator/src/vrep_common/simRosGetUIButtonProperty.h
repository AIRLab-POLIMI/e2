/* Auto-generated by genmsg_cpp for file /home/jackal/ros_workspace/src/vrep/vrep_common/srv/simRosGetUIButtonProperty.srv */
#ifndef VREP_COMMON_SERVICE_SIMROSGETUIBUTTONPROPERTY_H
#define VREP_COMMON_SERVICE_SIMROSGETUIBUTTONPROPERTY_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace vrep_common
{
template <class ContainerAllocator>
struct simRosGetUIButtonPropertyRequest_ {
  typedef simRosGetUIButtonPropertyRequest_<ContainerAllocator> Type;

  simRosGetUIButtonPropertyRequest_()
  : uiHandle(0)
  , buttonID(0)
  {
  }

  simRosGetUIButtonPropertyRequest_(const ContainerAllocator& _alloc)
  : uiHandle(0)
  , buttonID(0)
  {
  }

  typedef int32_t _uiHandle_type;
  int32_t uiHandle;

  typedef int32_t _buttonID_type;
  int32_t buttonID;


  typedef boost::shared_ptr< ::vrep_common::simRosGetUIButtonPropertyRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosGetUIButtonPropertyRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosGetUIButtonPropertyRequest
typedef  ::vrep_common::simRosGetUIButtonPropertyRequest_<std::allocator<void> > simRosGetUIButtonPropertyRequest;

typedef boost::shared_ptr< ::vrep_common::simRosGetUIButtonPropertyRequest> simRosGetUIButtonPropertyRequestPtr;
typedef boost::shared_ptr< ::vrep_common::simRosGetUIButtonPropertyRequest const> simRosGetUIButtonPropertyRequestConstPtr;


template <class ContainerAllocator>
struct simRosGetUIButtonPropertyResponse_ {
  typedef simRosGetUIButtonPropertyResponse_<ContainerAllocator> Type;

  simRosGetUIButtonPropertyResponse_()
  : propertyValue(0)
  {
  }

  simRosGetUIButtonPropertyResponse_(const ContainerAllocator& _alloc)
  : propertyValue(0)
  {
  }

  typedef int32_t _propertyValue_type;
  int32_t propertyValue;


  typedef boost::shared_ptr< ::vrep_common::simRosGetUIButtonPropertyResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosGetUIButtonPropertyResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosGetUIButtonPropertyResponse
typedef  ::vrep_common::simRosGetUIButtonPropertyResponse_<std::allocator<void> > simRosGetUIButtonPropertyResponse;

typedef boost::shared_ptr< ::vrep_common::simRosGetUIButtonPropertyResponse> simRosGetUIButtonPropertyResponsePtr;
typedef boost::shared_ptr< ::vrep_common::simRosGetUIButtonPropertyResponse const> simRosGetUIButtonPropertyResponseConstPtr;

struct simRosGetUIButtonProperty
{

typedef simRosGetUIButtonPropertyRequest Request;
typedef simRosGetUIButtonPropertyResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct simRosGetUIButtonProperty
} // namespace vrep_common

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetUIButtonPropertyRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetUIButtonPropertyRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosGetUIButtonPropertyRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "3237fb7c1b11a9bf71b5bb80da60a11a";
  }

  static const char* value(const  ::vrep_common::simRosGetUIButtonPropertyRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x3237fb7c1b11a9bfULL;
  static const uint64_t static_value2 = 0x71b5bb80da60a11aULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosGetUIButtonPropertyRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetUIButtonPropertyRequest";
  }

  static const char* value(const  ::vrep_common::simRosGetUIButtonPropertyRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosGetUIButtonPropertyRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
int32 uiHandle\n\
int32 buttonID\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosGetUIButtonPropertyRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosGetUIButtonPropertyRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetUIButtonPropertyResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetUIButtonPropertyResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosGetUIButtonPropertyResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "a3ff7a3737260dba8d61537cf18cc60a";
  }

  static const char* value(const  ::vrep_common::simRosGetUIButtonPropertyResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xa3ff7a3737260dbaULL;
  static const uint64_t static_value2 = 0x8d61537cf18cc60aULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosGetUIButtonPropertyResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetUIButtonPropertyResponse";
  }

  static const char* value(const  ::vrep_common::simRosGetUIButtonPropertyResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosGetUIButtonPropertyResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 propertyValue\n\
\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosGetUIButtonPropertyResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosGetUIButtonPropertyResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosGetUIButtonPropertyRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.uiHandle);
    stream.next(m.buttonID);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosGetUIButtonPropertyRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosGetUIButtonPropertyResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.propertyValue);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosGetUIButtonPropertyResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<vrep_common::simRosGetUIButtonProperty> {
  static const char* value() 
  {
    return "3c5af3530571fd8a5d18090795eb3f0c";
  }

  static const char* value(const vrep_common::simRosGetUIButtonProperty&) { return value(); } 
};

template<>
struct DataType<vrep_common::simRosGetUIButtonProperty> {
  static const char* value() 
  {
    return "vrep_common/simRosGetUIButtonProperty";
  }

  static const char* value(const vrep_common::simRosGetUIButtonProperty&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosGetUIButtonPropertyRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "3c5af3530571fd8a5d18090795eb3f0c";
  }

  static const char* value(const vrep_common::simRosGetUIButtonPropertyRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosGetUIButtonPropertyRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetUIButtonProperty";
  }

  static const char* value(const vrep_common::simRosGetUIButtonPropertyRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosGetUIButtonPropertyResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "3c5af3530571fd8a5d18090795eb3f0c";
  }

  static const char* value(const vrep_common::simRosGetUIButtonPropertyResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosGetUIButtonPropertyResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetUIButtonProperty";
  }

  static const char* value(const vrep_common::simRosGetUIButtonPropertyResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // VREP_COMMON_SERVICE_SIMROSGETUIBUTTONPROPERTY_H

