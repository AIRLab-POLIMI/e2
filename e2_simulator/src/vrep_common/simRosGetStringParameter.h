/* Auto-generated by genmsg_cpp for file /home/jackal/ros_workspace/src/vrep/vrep_common/srv/simRosGetStringParameter.srv */
#ifndef VREP_COMMON_SERVICE_SIMROSGETSTRINGPARAMETER_H
#define VREP_COMMON_SERVICE_SIMROSGETSTRINGPARAMETER_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace vrep_common
{
template <class ContainerAllocator>
struct simRosGetStringParameterRequest_ {
  typedef simRosGetStringParameterRequest_<ContainerAllocator> Type;

  simRosGetStringParameterRequest_()
  : parameter(0)
  {
  }

  simRosGetStringParameterRequest_(const ContainerAllocator& _alloc)
  : parameter(0)
  {
  }

  typedef int32_t _parameter_type;
  int32_t parameter;


  typedef boost::shared_ptr< ::vrep_common::simRosGetStringParameterRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosGetStringParameterRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosGetStringParameterRequest
typedef  ::vrep_common::simRosGetStringParameterRequest_<std::allocator<void> > simRosGetStringParameterRequest;

typedef boost::shared_ptr< ::vrep_common::simRosGetStringParameterRequest> simRosGetStringParameterRequestPtr;
typedef boost::shared_ptr< ::vrep_common::simRosGetStringParameterRequest const> simRosGetStringParameterRequestConstPtr;


template <class ContainerAllocator>
struct simRosGetStringParameterResponse_ {
  typedef simRosGetStringParameterResponse_<ContainerAllocator> Type;

  simRosGetStringParameterResponse_()
  : result(0)
  , parameterValue()
  {
  }

  simRosGetStringParameterResponse_(const ContainerAllocator& _alloc)
  : result(0)
  , parameterValue(_alloc)
  {
  }

  typedef int32_t _result_type;
  int32_t result;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _parameterValue_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  parameterValue;


  typedef boost::shared_ptr< ::vrep_common::simRosGetStringParameterResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosGetStringParameterResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosGetStringParameterResponse
typedef  ::vrep_common::simRosGetStringParameterResponse_<std::allocator<void> > simRosGetStringParameterResponse;

typedef boost::shared_ptr< ::vrep_common::simRosGetStringParameterResponse> simRosGetStringParameterResponsePtr;
typedef boost::shared_ptr< ::vrep_common::simRosGetStringParameterResponse const> simRosGetStringParameterResponseConstPtr;

struct simRosGetStringParameter
{

typedef simRosGetStringParameterRequest Request;
typedef simRosGetStringParameterResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct simRosGetStringParameter
} // namespace vrep_common

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetStringParameterRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetStringParameterRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosGetStringParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "3b5e34835331aac7a9065c5abd204e3b";
  }

  static const char* value(const  ::vrep_common::simRosGetStringParameterRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x3b5e34835331aac7ULL;
  static const uint64_t static_value2 = 0xa9065c5abd204e3bULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosGetStringParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetStringParameterRequest";
  }

  static const char* value(const  ::vrep_common::simRosGetStringParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosGetStringParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
int32 parameter\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosGetStringParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosGetStringParameterRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetStringParameterResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetStringParameterResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosGetStringParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "277afce6922cf13c8f31ca56b4f64e0b";
  }

  static const char* value(const  ::vrep_common::simRosGetStringParameterResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x277afce6922cf13cULL;
  static const uint64_t static_value2 = 0x8f31ca56b4f64e0bULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosGetStringParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetStringParameterResponse";
  }

  static const char* value(const  ::vrep_common::simRosGetStringParameterResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosGetStringParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 result\n\
string parameterValue\n\
\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosGetStringParameterResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosGetStringParameterRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.parameter);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosGetStringParameterRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosGetStringParameterResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result);
    stream.next(m.parameterValue);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosGetStringParameterResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<vrep_common::simRosGetStringParameter> {
  static const char* value() 
  {
    return "bfa84711627860a0d3cd5d1050dd8779";
  }

  static const char* value(const vrep_common::simRosGetStringParameter&) { return value(); } 
};

template<>
struct DataType<vrep_common::simRosGetStringParameter> {
  static const char* value() 
  {
    return "vrep_common/simRosGetStringParameter";
  }

  static const char* value(const vrep_common::simRosGetStringParameter&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosGetStringParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bfa84711627860a0d3cd5d1050dd8779";
  }

  static const char* value(const vrep_common::simRosGetStringParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosGetStringParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetStringParameter";
  }

  static const char* value(const vrep_common::simRosGetStringParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosGetStringParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bfa84711627860a0d3cd5d1050dd8779";
  }

  static const char* value(const vrep_common::simRosGetStringParameterResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosGetStringParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetStringParameter";
  }

  static const char* value(const vrep_common::simRosGetStringParameterResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // VREP_COMMON_SERVICE_SIMROSGETSTRINGPARAMETER_H

