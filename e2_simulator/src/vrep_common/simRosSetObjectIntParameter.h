/* Auto-generated by genmsg_cpp for file /home/jackal/ros_workspace/src/vrep/vrep_common/srv/simRosSetObjectIntParameter.srv */
#ifndef VREP_COMMON_SERVICE_SIMROSSETOBJECTINTPARAMETER_H
#define VREP_COMMON_SERVICE_SIMROSSETOBJECTINTPARAMETER_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace vrep_common
{
template <class ContainerAllocator>
struct simRosSetObjectIntParameterRequest_ {
  typedef simRosSetObjectIntParameterRequest_<ContainerAllocator> Type;

  simRosSetObjectIntParameterRequest_()
  : handle(0)
  , parameter(0)
  , parameterValue(0)
  {
  }

  simRosSetObjectIntParameterRequest_(const ContainerAllocator& _alloc)
  : handle(0)
  , parameter(0)
  , parameterValue(0)
  {
  }

  typedef int32_t _handle_type;
  int32_t handle;

  typedef int32_t _parameter_type;
  int32_t parameter;

  typedef int32_t _parameterValue_type;
  int32_t parameterValue;


  typedef boost::shared_ptr< ::vrep_common::simRosSetObjectIntParameterRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosSetObjectIntParameterRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosSetObjectIntParameterRequest
typedef  ::vrep_common::simRosSetObjectIntParameterRequest_<std::allocator<void> > simRosSetObjectIntParameterRequest;

typedef boost::shared_ptr< ::vrep_common::simRosSetObjectIntParameterRequest> simRosSetObjectIntParameterRequestPtr;
typedef boost::shared_ptr< ::vrep_common::simRosSetObjectIntParameterRequest const> simRosSetObjectIntParameterRequestConstPtr;


template <class ContainerAllocator>
struct simRosSetObjectIntParameterResponse_ {
  typedef simRosSetObjectIntParameterResponse_<ContainerAllocator> Type;

  simRosSetObjectIntParameterResponse_()
  : result(0)
  {
  }

  simRosSetObjectIntParameterResponse_(const ContainerAllocator& _alloc)
  : result(0)
  {
  }

  typedef int32_t _result_type;
  int32_t result;


  typedef boost::shared_ptr< ::vrep_common::simRosSetObjectIntParameterResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosSetObjectIntParameterResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosSetObjectIntParameterResponse
typedef  ::vrep_common::simRosSetObjectIntParameterResponse_<std::allocator<void> > simRosSetObjectIntParameterResponse;

typedef boost::shared_ptr< ::vrep_common::simRosSetObjectIntParameterResponse> simRosSetObjectIntParameterResponsePtr;
typedef boost::shared_ptr< ::vrep_common::simRosSetObjectIntParameterResponse const> simRosSetObjectIntParameterResponseConstPtr;

struct simRosSetObjectIntParameter
{

typedef simRosSetObjectIntParameterRequest Request;
typedef simRosSetObjectIntParameterResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct simRosSetObjectIntParameter
} // namespace vrep_common

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetObjectIntParameterRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetObjectIntParameterRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosSetObjectIntParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "31bdad5c2b1f7cc8b85b4047431fdd27";
  }

  static const char* value(const  ::vrep_common::simRosSetObjectIntParameterRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x31bdad5c2b1f7cc8ULL;
  static const uint64_t static_value2 = 0xb85b4047431fdd27ULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosSetObjectIntParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetObjectIntParameterRequest";
  }

  static const char* value(const  ::vrep_common::simRosSetObjectIntParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosSetObjectIntParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
int32 handle\n\
int32 parameter\n\
int32 parameterValue\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosSetObjectIntParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosSetObjectIntParameterRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetObjectIntParameterResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetObjectIntParameterResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosSetObjectIntParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "034a8e20d6a306665e3a5b340fab3f09";
  }

  static const char* value(const  ::vrep_common::simRosSetObjectIntParameterResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x034a8e20d6a30666ULL;
  static const uint64_t static_value2 = 0x5e3a5b340fab3f09ULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosSetObjectIntParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetObjectIntParameterResponse";
  }

  static const char* value(const  ::vrep_common::simRosSetObjectIntParameterResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosSetObjectIntParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 result\n\
\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosSetObjectIntParameterResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosSetObjectIntParameterResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosSetObjectIntParameterRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.handle);
    stream.next(m.parameter);
    stream.next(m.parameterValue);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosSetObjectIntParameterRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosSetObjectIntParameterResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosSetObjectIntParameterResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<vrep_common::simRosSetObjectIntParameter> {
  static const char* value() 
  {
    return "fd6c30a0a0bb1198c016550800028a13";
  }

  static const char* value(const vrep_common::simRosSetObjectIntParameter&) { return value(); } 
};

template<>
struct DataType<vrep_common::simRosSetObjectIntParameter> {
  static const char* value() 
  {
    return "vrep_common/simRosSetObjectIntParameter";
  }

  static const char* value(const vrep_common::simRosSetObjectIntParameter&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosSetObjectIntParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "fd6c30a0a0bb1198c016550800028a13";
  }

  static const char* value(const vrep_common::simRosSetObjectIntParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosSetObjectIntParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetObjectIntParameter";
  }

  static const char* value(const vrep_common::simRosSetObjectIntParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosSetObjectIntParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "fd6c30a0a0bb1198c016550800028a13";
  }

  static const char* value(const vrep_common::simRosSetObjectIntParameterResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosSetObjectIntParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetObjectIntParameter";
  }

  static const char* value(const vrep_common::simRosSetObjectIntParameterResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // VREP_COMMON_SERVICE_SIMROSSETOBJECTINTPARAMETER_H

