/* Auto-generated by genmsg_cpp for file /home/jackal/ros_workspace/src/vrep/vrep_common/srv/simRosSetObjectPosition.srv */
#ifndef VREP_COMMON_SERVICE_SIMROSSETOBJECTPOSITION_H
#define VREP_COMMON_SERVICE_SIMROSSETOBJECTPOSITION_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"

#include "geometry_msgs/Point.h"



namespace vrep_common
{
template <class ContainerAllocator>
struct simRosSetObjectPositionRequest_ {
  typedef simRosSetObjectPositionRequest_<ContainerAllocator> Type;

  simRosSetObjectPositionRequest_()
  : handle(0)
  , relativeToObjectHandle(0)
  , position()
  {
  }

  simRosSetObjectPositionRequest_(const ContainerAllocator& _alloc)
  : handle(0)
  , relativeToObjectHandle(0)
  , position(_alloc)
  {
  }

  typedef int32_t _handle_type;
  int32_t handle;

  typedef int32_t _relativeToObjectHandle_type;
  int32_t relativeToObjectHandle;

  typedef  ::geometry_msgs::Point_<ContainerAllocator>  _position_type;
   ::geometry_msgs::Point_<ContainerAllocator>  position;


  typedef boost::shared_ptr< ::vrep_common::simRosSetObjectPositionRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosSetObjectPositionRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosSetObjectPositionRequest
typedef  ::vrep_common::simRosSetObjectPositionRequest_<std::allocator<void> > simRosSetObjectPositionRequest;

typedef boost::shared_ptr< ::vrep_common::simRosSetObjectPositionRequest> simRosSetObjectPositionRequestPtr;
typedef boost::shared_ptr< ::vrep_common::simRosSetObjectPositionRequest const> simRosSetObjectPositionRequestConstPtr;


template <class ContainerAllocator>
struct simRosSetObjectPositionResponse_ {
  typedef simRosSetObjectPositionResponse_<ContainerAllocator> Type;

  simRosSetObjectPositionResponse_()
  : result(0)
  {
  }

  simRosSetObjectPositionResponse_(const ContainerAllocator& _alloc)
  : result(0)
  {
  }

  typedef int32_t _result_type;
  int32_t result;


  typedef boost::shared_ptr< ::vrep_common::simRosSetObjectPositionResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosSetObjectPositionResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosSetObjectPositionResponse
typedef  ::vrep_common::simRosSetObjectPositionResponse_<std::allocator<void> > simRosSetObjectPositionResponse;

typedef boost::shared_ptr< ::vrep_common::simRosSetObjectPositionResponse> simRosSetObjectPositionResponsePtr;
typedef boost::shared_ptr< ::vrep_common::simRosSetObjectPositionResponse const> simRosSetObjectPositionResponseConstPtr;

struct simRosSetObjectPosition
{

typedef simRosSetObjectPositionRequest Request;
typedef simRosSetObjectPositionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct simRosSetObjectPosition
} // namespace vrep_common

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetObjectPositionRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetObjectPositionRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosSetObjectPositionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "5dc792cd46f351f94087b2840e1f4005";
  }

  static const char* value(const  ::vrep_common::simRosSetObjectPositionRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x5dc792cd46f351f9ULL;
  static const uint64_t static_value2 = 0x4087b2840e1f4005ULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosSetObjectPositionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetObjectPositionRequest";
  }

  static const char* value(const  ::vrep_common::simRosSetObjectPositionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosSetObjectPositionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
int32 handle\n\
int32 relativeToObjectHandle\n\
geometry_msgs/Point position\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Point\n\
# This contains the position of a point in free space\n\
float64 x\n\
float64 y\n\
float64 z\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosSetObjectPositionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosSetObjectPositionRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetObjectPositionResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetObjectPositionResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosSetObjectPositionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "034a8e20d6a306665e3a5b340fab3f09";
  }

  static const char* value(const  ::vrep_common::simRosSetObjectPositionResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x034a8e20d6a30666ULL;
  static const uint64_t static_value2 = 0x5e3a5b340fab3f09ULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosSetObjectPositionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetObjectPositionResponse";
  }

  static const char* value(const  ::vrep_common::simRosSetObjectPositionResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosSetObjectPositionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 result\n\
\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosSetObjectPositionResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosSetObjectPositionResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosSetObjectPositionRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.handle);
    stream.next(m.relativeToObjectHandle);
    stream.next(m.position);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosSetObjectPositionRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosSetObjectPositionResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosSetObjectPositionResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<vrep_common::simRosSetObjectPosition> {
  static const char* value() 
  {
    return "6f49de0c0a94265fc772061f892cd142";
  }

  static const char* value(const vrep_common::simRosSetObjectPosition&) { return value(); } 
};

template<>
struct DataType<vrep_common::simRosSetObjectPosition> {
  static const char* value() 
  {
    return "vrep_common/simRosSetObjectPosition";
  }

  static const char* value(const vrep_common::simRosSetObjectPosition&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosSetObjectPositionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "6f49de0c0a94265fc772061f892cd142";
  }

  static const char* value(const vrep_common::simRosSetObjectPositionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosSetObjectPositionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetObjectPosition";
  }

  static const char* value(const vrep_common::simRosSetObjectPositionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosSetObjectPositionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "6f49de0c0a94265fc772061f892cd142";
  }

  static const char* value(const vrep_common::simRosSetObjectPositionResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosSetObjectPositionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetObjectPosition";
  }

  static const char* value(const vrep_common::simRosSetObjectPositionResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // VREP_COMMON_SERVICE_SIMROSSETOBJECTPOSITION_H

