/* Auto-generated by genmsg_cpp for file /home/jackal/ros_workspace/src/vrep/vrep_common/srv/simRosSetModelProperty.srv */
#ifndef VREP_COMMON_SERVICE_SIMROSSETMODELPROPERTY_H
#define VREP_COMMON_SERVICE_SIMROSSETMODELPROPERTY_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace vrep_common
{
template <class ContainerAllocator>
struct simRosSetModelPropertyRequest_ {
  typedef simRosSetModelPropertyRequest_<ContainerAllocator> Type;

  simRosSetModelPropertyRequest_()
  : handle(0)
  , propertyValue(0)
  {
  }

  simRosSetModelPropertyRequest_(const ContainerAllocator& _alloc)
  : handle(0)
  , propertyValue(0)
  {
  }

  typedef int32_t _handle_type;
  int32_t handle;

  typedef int32_t _propertyValue_type;
  int32_t propertyValue;


  typedef boost::shared_ptr< ::vrep_common::simRosSetModelPropertyRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosSetModelPropertyRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosSetModelPropertyRequest
typedef  ::vrep_common::simRosSetModelPropertyRequest_<std::allocator<void> > simRosSetModelPropertyRequest;

typedef boost::shared_ptr< ::vrep_common::simRosSetModelPropertyRequest> simRosSetModelPropertyRequestPtr;
typedef boost::shared_ptr< ::vrep_common::simRosSetModelPropertyRequest const> simRosSetModelPropertyRequestConstPtr;


template <class ContainerAllocator>
struct simRosSetModelPropertyResponse_ {
  typedef simRosSetModelPropertyResponse_<ContainerAllocator> Type;

  simRosSetModelPropertyResponse_()
  : result(0)
  {
  }

  simRosSetModelPropertyResponse_(const ContainerAllocator& _alloc)
  : result(0)
  {
  }

  typedef int32_t _result_type;
  int32_t result;


  typedef boost::shared_ptr< ::vrep_common::simRosSetModelPropertyResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosSetModelPropertyResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosSetModelPropertyResponse
typedef  ::vrep_common::simRosSetModelPropertyResponse_<std::allocator<void> > simRosSetModelPropertyResponse;

typedef boost::shared_ptr< ::vrep_common::simRosSetModelPropertyResponse> simRosSetModelPropertyResponsePtr;
typedef boost::shared_ptr< ::vrep_common::simRosSetModelPropertyResponse const> simRosSetModelPropertyResponseConstPtr;

struct simRosSetModelProperty
{

typedef simRosSetModelPropertyRequest Request;
typedef simRosSetModelPropertyResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct simRosSetModelProperty
} // namespace vrep_common

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetModelPropertyRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetModelPropertyRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosSetModelPropertyRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "c1dfc3d3e983651365795ed48e7ad342";
  }

  static const char* value(const  ::vrep_common::simRosSetModelPropertyRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xc1dfc3d3e9836513ULL;
  static const uint64_t static_value2 = 0x65795ed48e7ad342ULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosSetModelPropertyRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetModelPropertyRequest";
  }

  static const char* value(const  ::vrep_common::simRosSetModelPropertyRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosSetModelPropertyRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
int32 handle\n\
int32 propertyValue\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosSetModelPropertyRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosSetModelPropertyRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetModelPropertyResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetModelPropertyResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosSetModelPropertyResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "034a8e20d6a306665e3a5b340fab3f09";
  }

  static const char* value(const  ::vrep_common::simRosSetModelPropertyResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x034a8e20d6a30666ULL;
  static const uint64_t static_value2 = 0x5e3a5b340fab3f09ULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosSetModelPropertyResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetModelPropertyResponse";
  }

  static const char* value(const  ::vrep_common::simRosSetModelPropertyResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosSetModelPropertyResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 result\n\
\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosSetModelPropertyResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosSetModelPropertyResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosSetModelPropertyRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.handle);
    stream.next(m.propertyValue);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosSetModelPropertyRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosSetModelPropertyResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosSetModelPropertyResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<vrep_common::simRosSetModelProperty> {
  static const char* value() 
  {
    return "7f97a83fe47ddd7d7a57ba9fe6623621";
  }

  static const char* value(const vrep_common::simRosSetModelProperty&) { return value(); } 
};

template<>
struct DataType<vrep_common::simRosSetModelProperty> {
  static const char* value() 
  {
    return "vrep_common/simRosSetModelProperty";
  }

  static const char* value(const vrep_common::simRosSetModelProperty&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosSetModelPropertyRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "7f97a83fe47ddd7d7a57ba9fe6623621";
  }

  static const char* value(const vrep_common::simRosSetModelPropertyRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosSetModelPropertyRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetModelProperty";
  }

  static const char* value(const vrep_common::simRosSetModelPropertyRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosSetModelPropertyResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "7f97a83fe47ddd7d7a57ba9fe6623621";
  }

  static const char* value(const vrep_common::simRosSetModelPropertyResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosSetModelPropertyResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetModelProperty";
  }

  static const char* value(const vrep_common::simRosSetModelPropertyResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // VREP_COMMON_SERVICE_SIMROSSETMODELPROPERTY_H

