/* Auto-generated by genmsg_cpp for file /home/jackal/ros_workspace/src/vrep/vrep_common/srv/simRosGetDialogInput.srv */
#ifndef VREP_COMMON_SERVICE_SIMROSGETDIALOGINPUT_H
#define VREP_COMMON_SERVICE_SIMROSGETDIALOGINPUT_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace vrep_common
{
template <class ContainerAllocator>
struct simRosGetDialogInputRequest_ {
  typedef simRosGetDialogInputRequest_<ContainerAllocator> Type;

  simRosGetDialogInputRequest_()
  : dialogHandle(0)
  {
  }

  simRosGetDialogInputRequest_(const ContainerAllocator& _alloc)
  : dialogHandle(0)
  {
  }

  typedef int32_t _dialogHandle_type;
  int32_t dialogHandle;


  typedef boost::shared_ptr< ::vrep_common::simRosGetDialogInputRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosGetDialogInputRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosGetDialogInputRequest
typedef  ::vrep_common::simRosGetDialogInputRequest_<std::allocator<void> > simRosGetDialogInputRequest;

typedef boost::shared_ptr< ::vrep_common::simRosGetDialogInputRequest> simRosGetDialogInputRequestPtr;
typedef boost::shared_ptr< ::vrep_common::simRosGetDialogInputRequest const> simRosGetDialogInputRequestConstPtr;


template <class ContainerAllocator>
struct simRosGetDialogInputResponse_ {
  typedef simRosGetDialogInputResponse_<ContainerAllocator> Type;

  simRosGetDialogInputResponse_()
  : result(0)
  , input()
  {
  }

  simRosGetDialogInputResponse_(const ContainerAllocator& _alloc)
  : result(0)
  , input(_alloc)
  {
  }

  typedef int32_t _result_type;
  int32_t result;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _input_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  input;


  typedef boost::shared_ptr< ::vrep_common::simRosGetDialogInputResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosGetDialogInputResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosGetDialogInputResponse
typedef  ::vrep_common::simRosGetDialogInputResponse_<std::allocator<void> > simRosGetDialogInputResponse;

typedef boost::shared_ptr< ::vrep_common::simRosGetDialogInputResponse> simRosGetDialogInputResponsePtr;
typedef boost::shared_ptr< ::vrep_common::simRosGetDialogInputResponse const> simRosGetDialogInputResponseConstPtr;

struct simRosGetDialogInput
{

typedef simRosGetDialogInputRequest Request;
typedef simRosGetDialogInputResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct simRosGetDialogInput
} // namespace vrep_common

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetDialogInputRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetDialogInputRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosGetDialogInputRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "290f4bd47ce8d0f7c78c1d510052331a";
  }

  static const char* value(const  ::vrep_common::simRosGetDialogInputRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x290f4bd47ce8d0f7ULL;
  static const uint64_t static_value2 = 0xc78c1d510052331aULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosGetDialogInputRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetDialogInputRequest";
  }

  static const char* value(const  ::vrep_common::simRosGetDialogInputRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosGetDialogInputRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
int32 dialogHandle\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosGetDialogInputRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosGetDialogInputRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetDialogInputResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetDialogInputResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosGetDialogInputResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "4dbece23a7f7a45b3aee510311b5c901";
  }

  static const char* value(const  ::vrep_common::simRosGetDialogInputResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x4dbece23a7f7a45bULL;
  static const uint64_t static_value2 = 0x3aee510311b5c901ULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosGetDialogInputResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetDialogInputResponse";
  }

  static const char* value(const  ::vrep_common::simRosGetDialogInputResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosGetDialogInputResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 result\n\
string input\n\
\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosGetDialogInputResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosGetDialogInputRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.dialogHandle);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosGetDialogInputRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosGetDialogInputResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result);
    stream.next(m.input);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosGetDialogInputResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<vrep_common::simRosGetDialogInput> {
  static const char* value() 
  {
    return "a7a320351d6344ea2112d3892daa9e7f";
  }

  static const char* value(const vrep_common::simRosGetDialogInput&) { return value(); } 
};

template<>
struct DataType<vrep_common::simRosGetDialogInput> {
  static const char* value() 
  {
    return "vrep_common/simRosGetDialogInput";
  }

  static const char* value(const vrep_common::simRosGetDialogInput&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosGetDialogInputRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "a7a320351d6344ea2112d3892daa9e7f";
  }

  static const char* value(const vrep_common::simRosGetDialogInputRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosGetDialogInputRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetDialogInput";
  }

  static const char* value(const vrep_common::simRosGetDialogInputRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosGetDialogInputResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "a7a320351d6344ea2112d3892daa9e7f";
  }

  static const char* value(const vrep_common::simRosGetDialogInputResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosGetDialogInputResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetDialogInput";
  }

  static const char* value(const vrep_common::simRosGetDialogInputResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // VREP_COMMON_SERVICE_SIMROSGETDIALOGINPUT_H

