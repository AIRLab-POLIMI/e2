/* Auto-generated by genmsg_cpp for file /home/jackal/ros_workspace/src/vrep/vrep_common/srv/simRosGetObjectChild.srv */
#ifndef VREP_COMMON_SERVICE_SIMROSGETOBJECTCHILD_H
#define VREP_COMMON_SERVICE_SIMROSGETOBJECTCHILD_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace vrep_common
{
template <class ContainerAllocator>
struct simRosGetObjectChildRequest_ {
  typedef simRosGetObjectChildRequest_<ContainerAllocator> Type;

  simRosGetObjectChildRequest_()
  : handle(0)
  , index(0)
  {
  }

  simRosGetObjectChildRequest_(const ContainerAllocator& _alloc)
  : handle(0)
  , index(0)
  {
  }

  typedef int32_t _handle_type;
  int32_t handle;

  typedef int32_t _index_type;
  int32_t index;


  typedef boost::shared_ptr< ::vrep_common::simRosGetObjectChildRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosGetObjectChildRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosGetObjectChildRequest
typedef  ::vrep_common::simRosGetObjectChildRequest_<std::allocator<void> > simRosGetObjectChildRequest;

typedef boost::shared_ptr< ::vrep_common::simRosGetObjectChildRequest> simRosGetObjectChildRequestPtr;
typedef boost::shared_ptr< ::vrep_common::simRosGetObjectChildRequest const> simRosGetObjectChildRequestConstPtr;


template <class ContainerAllocator>
struct simRosGetObjectChildResponse_ {
  typedef simRosGetObjectChildResponse_<ContainerAllocator> Type;

  simRosGetObjectChildResponse_()
  : childHandle(0)
  {
  }

  simRosGetObjectChildResponse_(const ContainerAllocator& _alloc)
  : childHandle(0)
  {
  }

  typedef int32_t _childHandle_type;
  int32_t childHandle;


  typedef boost::shared_ptr< ::vrep_common::simRosGetObjectChildResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosGetObjectChildResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosGetObjectChildResponse
typedef  ::vrep_common::simRosGetObjectChildResponse_<std::allocator<void> > simRosGetObjectChildResponse;

typedef boost::shared_ptr< ::vrep_common::simRosGetObjectChildResponse> simRosGetObjectChildResponsePtr;
typedef boost::shared_ptr< ::vrep_common::simRosGetObjectChildResponse const> simRosGetObjectChildResponseConstPtr;

struct simRosGetObjectChild
{

typedef simRosGetObjectChildRequest Request;
typedef simRosGetObjectChildResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct simRosGetObjectChild
} // namespace vrep_common

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetObjectChildRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetObjectChildRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosGetObjectChildRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "38a6074f4ac9f6ddcbf3ed839a2974d2";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectChildRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x38a6074f4ac9f6ddULL;
  static const uint64_t static_value2 = 0xcbf3ed839a2974d2ULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosGetObjectChildRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjectChildRequest";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectChildRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosGetObjectChildRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
int32 handle\n\
int32 index\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectChildRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosGetObjectChildRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetObjectChildResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetObjectChildResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosGetObjectChildResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "efe17144606e0d5454d7698cb2bf24b7";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectChildResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xefe17144606e0d54ULL;
  static const uint64_t static_value2 = 0x54d7698cb2bf24b7ULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosGetObjectChildResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjectChildResponse";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectChildResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosGetObjectChildResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 childHandle\n\
\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectChildResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosGetObjectChildResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosGetObjectChildRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.handle);
    stream.next(m.index);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosGetObjectChildRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosGetObjectChildResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.childHandle);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosGetObjectChildResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<vrep_common::simRosGetObjectChild> {
  static const char* value() 
  {
    return "2fc24ec13ef12d145e6853d1469b925c";
  }

  static const char* value(const vrep_common::simRosGetObjectChild&) { return value(); } 
};

template<>
struct DataType<vrep_common::simRosGetObjectChild> {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjectChild";
  }

  static const char* value(const vrep_common::simRosGetObjectChild&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosGetObjectChildRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "2fc24ec13ef12d145e6853d1469b925c";
  }

  static const char* value(const vrep_common::simRosGetObjectChildRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosGetObjectChildRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjectChild";
  }

  static const char* value(const vrep_common::simRosGetObjectChildRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosGetObjectChildResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "2fc24ec13ef12d145e6853d1469b925c";
  }

  static const char* value(const vrep_common::simRosGetObjectChildResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosGetObjectChildResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjectChild";
  }

  static const char* value(const vrep_common::simRosGetObjectChildResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // VREP_COMMON_SERVICE_SIMROSGETOBJECTCHILD_H

