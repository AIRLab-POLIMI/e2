/* Auto-generated by genmsg_cpp for file /home/jackal/ros_workspace/src/vrep/vrep_common/srv/simRosGetObjects.srv */
#ifndef VREP_COMMON_SERVICE_SIMROSGETOBJECTS_H
#define VREP_COMMON_SERVICE_SIMROSGETOBJECTS_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace vrep_common
{
template <class ContainerAllocator>
struct simRosGetObjectsRequest_ {
  typedef simRosGetObjectsRequest_<ContainerAllocator> Type;

  simRosGetObjectsRequest_()
  : objectType(0)
  {
  }

  simRosGetObjectsRequest_(const ContainerAllocator& _alloc)
  : objectType(0)
  {
  }

  typedef int32_t _objectType_type;
  int32_t objectType;


  typedef boost::shared_ptr< ::vrep_common::simRosGetObjectsRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosGetObjectsRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosGetObjectsRequest
typedef  ::vrep_common::simRosGetObjectsRequest_<std::allocator<void> > simRosGetObjectsRequest;

typedef boost::shared_ptr< ::vrep_common::simRosGetObjectsRequest> simRosGetObjectsRequestPtr;
typedef boost::shared_ptr< ::vrep_common::simRosGetObjectsRequest const> simRosGetObjectsRequestConstPtr;


template <class ContainerAllocator>
struct simRosGetObjectsResponse_ {
  typedef simRosGetObjectsResponse_<ContainerAllocator> Type;

  simRosGetObjectsResponse_()
  : result(0)
  , handles()
  {
  }

  simRosGetObjectsResponse_(const ContainerAllocator& _alloc)
  : result(0)
  , handles(_alloc)
  {
  }

  typedef int32_t _result_type;
  int32_t result;

  typedef std::vector<int32_t, typename ContainerAllocator::template rebind<int32_t>::other >  _handles_type;
  std::vector<int32_t, typename ContainerAllocator::template rebind<int32_t>::other >  handles;


  typedef boost::shared_ptr< ::vrep_common::simRosGetObjectsResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosGetObjectsResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosGetObjectsResponse
typedef  ::vrep_common::simRosGetObjectsResponse_<std::allocator<void> > simRosGetObjectsResponse;

typedef boost::shared_ptr< ::vrep_common::simRosGetObjectsResponse> simRosGetObjectsResponsePtr;
typedef boost::shared_ptr< ::vrep_common::simRosGetObjectsResponse const> simRosGetObjectsResponseConstPtr;

struct simRosGetObjects
{

typedef simRosGetObjectsRequest Request;
typedef simRosGetObjectsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct simRosGetObjects
} // namespace vrep_common

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetObjectsRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetObjectsRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosGetObjectsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "f18b65c1a814107158daa3b6bc83f24b";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectsRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xf18b65c1a8141071ULL;
  static const uint64_t static_value2 = 0x58daa3b6bc83f24bULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosGetObjectsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjectsRequest";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosGetObjectsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
int32 objectType\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosGetObjectsRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetObjectsResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetObjectsResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosGetObjectsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "2caeb9c40c89c5010410e3fd89796315";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectsResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x2caeb9c40c89c501ULL;
  static const uint64_t static_value2 = 0x0410e3fd89796315ULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosGetObjectsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjectsResponse";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosGetObjectsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 result\n\
int32[] handles\n\
\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosGetObjectsResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosGetObjectsRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.objectType);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosGetObjectsRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosGetObjectsResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result);
    stream.next(m.handles);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosGetObjectsResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<vrep_common::simRosGetObjects> {
  static const char* value() 
  {
    return "53b04066ba6b21f5182d36e874212727";
  }

  static const char* value(const vrep_common::simRosGetObjects&) { return value(); } 
};

template<>
struct DataType<vrep_common::simRosGetObjects> {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjects";
  }

  static const char* value(const vrep_common::simRosGetObjects&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosGetObjectsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "53b04066ba6b21f5182d36e874212727";
  }

  static const char* value(const vrep_common::simRosGetObjectsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosGetObjectsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjects";
  }

  static const char* value(const vrep_common::simRosGetObjectsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosGetObjectsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "53b04066ba6b21f5182d36e874212727";
  }

  static const char* value(const vrep_common::simRosGetObjectsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosGetObjectsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetObjects";
  }

  static const char* value(const vrep_common::simRosGetObjectsResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // VREP_COMMON_SERVICE_SIMROSGETOBJECTS_H

