/* Auto-generated by genmsg_cpp for file /home/jackal/ros_workspace/src/vrep/vrep_common/srv/simRosDisableSubscriber.srv */
#ifndef VREP_COMMON_SERVICE_SIMROSDISABLESUBSCRIBER_H
#define VREP_COMMON_SERVICE_SIMROSDISABLESUBSCRIBER_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace vrep_common
{
template <class ContainerAllocator>
struct simRosDisableSubscriberRequest_ {
  typedef simRosDisableSubscriberRequest_<ContainerAllocator> Type;

  simRosDisableSubscriberRequest_()
  : subscriberID(0)
  {
  }

  simRosDisableSubscriberRequest_(const ContainerAllocator& _alloc)
  : subscriberID(0)
  {
  }

  typedef int32_t _subscriberID_type;
  int32_t subscriberID;


  typedef boost::shared_ptr< ::vrep_common::simRosDisableSubscriberRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosDisableSubscriberRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosDisableSubscriberRequest
typedef  ::vrep_common::simRosDisableSubscriberRequest_<std::allocator<void> > simRosDisableSubscriberRequest;

typedef boost::shared_ptr< ::vrep_common::simRosDisableSubscriberRequest> simRosDisableSubscriberRequestPtr;
typedef boost::shared_ptr< ::vrep_common::simRosDisableSubscriberRequest const> simRosDisableSubscriberRequestConstPtr;


template <class ContainerAllocator>
struct simRosDisableSubscriberResponse_ {
  typedef simRosDisableSubscriberResponse_<ContainerAllocator> Type;

  simRosDisableSubscriberResponse_()
  : result(0)
  {
  }

  simRosDisableSubscriberResponse_(const ContainerAllocator& _alloc)
  : result(0)
  {
  }

  typedef uint8_t _result_type;
  uint8_t result;


  typedef boost::shared_ptr< ::vrep_common::simRosDisableSubscriberResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosDisableSubscriberResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosDisableSubscriberResponse
typedef  ::vrep_common::simRosDisableSubscriberResponse_<std::allocator<void> > simRosDisableSubscriberResponse;

typedef boost::shared_ptr< ::vrep_common::simRosDisableSubscriberResponse> simRosDisableSubscriberResponsePtr;
typedef boost::shared_ptr< ::vrep_common::simRosDisableSubscriberResponse const> simRosDisableSubscriberResponseConstPtr;

struct simRosDisableSubscriber
{

typedef simRosDisableSubscriberRequest Request;
typedef simRosDisableSubscriberResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct simRosDisableSubscriber
} // namespace vrep_common

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosDisableSubscriberRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosDisableSubscriberRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosDisableSubscriberRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "62d69ecf284a2ca70f446f9db0533ca8";
  }

  static const char* value(const  ::vrep_common::simRosDisableSubscriberRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x62d69ecf284a2ca7ULL;
  static const uint64_t static_value2 = 0x0f446f9db0533ca8ULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosDisableSubscriberRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosDisableSubscriberRequest";
  }

  static const char* value(const  ::vrep_common::simRosDisableSubscriberRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosDisableSubscriberRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
int32 subscriberID\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosDisableSubscriberRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosDisableSubscriberRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosDisableSubscriberResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosDisableSubscriberResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosDisableSubscriberResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "25458147911545c320c4c0a299eff763";
  }

  static const char* value(const  ::vrep_common::simRosDisableSubscriberResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x25458147911545c3ULL;
  static const uint64_t static_value2 = 0x20c4c0a299eff763ULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosDisableSubscriberResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosDisableSubscriberResponse";
  }

  static const char* value(const  ::vrep_common::simRosDisableSubscriberResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosDisableSubscriberResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "uint8 result\n\
\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosDisableSubscriberResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosDisableSubscriberResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosDisableSubscriberRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.subscriberID);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosDisableSubscriberRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosDisableSubscriberResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosDisableSubscriberResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<vrep_common::simRosDisableSubscriber> {
  static const char* value() 
  {
    return "87973d82517ab997be2393d06260d68a";
  }

  static const char* value(const vrep_common::simRosDisableSubscriber&) { return value(); } 
};

template<>
struct DataType<vrep_common::simRosDisableSubscriber> {
  static const char* value() 
  {
    return "vrep_common/simRosDisableSubscriber";
  }

  static const char* value(const vrep_common::simRosDisableSubscriber&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosDisableSubscriberRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "87973d82517ab997be2393d06260d68a";
  }

  static const char* value(const vrep_common::simRosDisableSubscriberRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosDisableSubscriberRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosDisableSubscriber";
  }

  static const char* value(const vrep_common::simRosDisableSubscriberRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosDisableSubscriberResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "87973d82517ab997be2393d06260d68a";
  }

  static const char* value(const vrep_common::simRosDisableSubscriberResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosDisableSubscriberResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosDisableSubscriber";
  }

  static const char* value(const vrep_common::simRosDisableSubscriberResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // VREP_COMMON_SERVICE_SIMROSDISABLESUBSCRIBER_H

