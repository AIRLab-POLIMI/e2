/* Auto-generated by genmsg_cpp for file /home/jackal/ros_workspace/src/vrep/vrep_common/srv/simRosGetBooleanParameter.srv */
#ifndef VREP_COMMON_SERVICE_SIMROSGETBOOLEANPARAMETER_H
#define VREP_COMMON_SERVICE_SIMROSGETBOOLEANPARAMETER_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace vrep_common
{
template <class ContainerAllocator>
struct simRosGetBooleanParameterRequest_ {
  typedef simRosGetBooleanParameterRequest_<ContainerAllocator> Type;

  simRosGetBooleanParameterRequest_()
  : parameter(0)
  {
  }

  simRosGetBooleanParameterRequest_(const ContainerAllocator& _alloc)
  : parameter(0)
  {
  }

  typedef int32_t _parameter_type;
  int32_t parameter;


  typedef boost::shared_ptr< ::vrep_common::simRosGetBooleanParameterRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosGetBooleanParameterRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosGetBooleanParameterRequest
typedef  ::vrep_common::simRosGetBooleanParameterRequest_<std::allocator<void> > simRosGetBooleanParameterRequest;

typedef boost::shared_ptr< ::vrep_common::simRosGetBooleanParameterRequest> simRosGetBooleanParameterRequestPtr;
typedef boost::shared_ptr< ::vrep_common::simRosGetBooleanParameterRequest const> simRosGetBooleanParameterRequestConstPtr;


template <class ContainerAllocator>
struct simRosGetBooleanParameterResponse_ {
  typedef simRosGetBooleanParameterResponse_<ContainerAllocator> Type;

  simRosGetBooleanParameterResponse_()
  : parameterValue(0)
  {
  }

  simRosGetBooleanParameterResponse_(const ContainerAllocator& _alloc)
  : parameterValue(0)
  {
  }

  typedef int32_t _parameterValue_type;
  int32_t parameterValue;


  typedef boost::shared_ptr< ::vrep_common::simRosGetBooleanParameterResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosGetBooleanParameterResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosGetBooleanParameterResponse
typedef  ::vrep_common::simRosGetBooleanParameterResponse_<std::allocator<void> > simRosGetBooleanParameterResponse;

typedef boost::shared_ptr< ::vrep_common::simRosGetBooleanParameterResponse> simRosGetBooleanParameterResponsePtr;
typedef boost::shared_ptr< ::vrep_common::simRosGetBooleanParameterResponse const> simRosGetBooleanParameterResponseConstPtr;

struct simRosGetBooleanParameter
{

typedef simRosGetBooleanParameterRequest Request;
typedef simRosGetBooleanParameterResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct simRosGetBooleanParameter
} // namespace vrep_common

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetBooleanParameterRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetBooleanParameterRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosGetBooleanParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "3b5e34835331aac7a9065c5abd204e3b";
  }

  static const char* value(const  ::vrep_common::simRosGetBooleanParameterRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x3b5e34835331aac7ULL;
  static const uint64_t static_value2 = 0xa9065c5abd204e3bULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosGetBooleanParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetBooleanParameterRequest";
  }

  static const char* value(const  ::vrep_common::simRosGetBooleanParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosGetBooleanParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
int32 parameter\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosGetBooleanParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosGetBooleanParameterRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetBooleanParameterResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosGetBooleanParameterResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosGetBooleanParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "27eb22d33b5c07abc8d72f26edb19395";
  }

  static const char* value(const  ::vrep_common::simRosGetBooleanParameterResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x27eb22d33b5c07abULL;
  static const uint64_t static_value2 = 0xc8d72f26edb19395ULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosGetBooleanParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetBooleanParameterResponse";
  }

  static const char* value(const  ::vrep_common::simRosGetBooleanParameterResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosGetBooleanParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 parameterValue\n\
\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosGetBooleanParameterResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosGetBooleanParameterResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosGetBooleanParameterRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.parameter);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosGetBooleanParameterRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosGetBooleanParameterResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.parameterValue);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosGetBooleanParameterResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<vrep_common::simRosGetBooleanParameter> {
  static const char* value() 
  {
    return "1d1aabce3fe70da836b3bf46393e4896";
  }

  static const char* value(const vrep_common::simRosGetBooleanParameter&) { return value(); } 
};

template<>
struct DataType<vrep_common::simRosGetBooleanParameter> {
  static const char* value() 
  {
    return "vrep_common/simRosGetBooleanParameter";
  }

  static const char* value(const vrep_common::simRosGetBooleanParameter&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosGetBooleanParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "1d1aabce3fe70da836b3bf46393e4896";
  }

  static const char* value(const vrep_common::simRosGetBooleanParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosGetBooleanParameterRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetBooleanParameter";
  }

  static const char* value(const vrep_common::simRosGetBooleanParameterRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosGetBooleanParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "1d1aabce3fe70da836b3bf46393e4896";
  }

  static const char* value(const vrep_common::simRosGetBooleanParameterResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosGetBooleanParameterResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosGetBooleanParameter";
  }

  static const char* value(const vrep_common::simRosGetBooleanParameterResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // VREP_COMMON_SERVICE_SIMROSGETBOOLEANPARAMETER_H

