/* Auto-generated by genmsg_cpp for file /home/jackal/ros_workspace/src/vrep/vrep_common/srv/simRosAuxiliaryConsoleShow.srv */
#ifndef VREP_COMMON_SERVICE_SIMROSAUXILIARYCONSOLESHOW_H
#define VREP_COMMON_SERVICE_SIMROSAUXILIARYCONSOLESHOW_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace vrep_common
{
template <class ContainerAllocator>
struct simRosAuxiliaryConsoleShowRequest_ {
  typedef simRosAuxiliaryConsoleShowRequest_<ContainerAllocator> Type;

  simRosAuxiliaryConsoleShowRequest_()
  : consoleHandle(0)
  , showState(0)
  {
  }

  simRosAuxiliaryConsoleShowRequest_(const ContainerAllocator& _alloc)
  : consoleHandle(0)
  , showState(0)
  {
  }

  typedef int32_t _consoleHandle_type;
  int32_t consoleHandle;

  typedef uint8_t _showState_type;
  uint8_t showState;


  typedef boost::shared_ptr< ::vrep_common::simRosAuxiliaryConsoleShowRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosAuxiliaryConsoleShowRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosAuxiliaryConsoleShowRequest
typedef  ::vrep_common::simRosAuxiliaryConsoleShowRequest_<std::allocator<void> > simRosAuxiliaryConsoleShowRequest;

typedef boost::shared_ptr< ::vrep_common::simRosAuxiliaryConsoleShowRequest> simRosAuxiliaryConsoleShowRequestPtr;
typedef boost::shared_ptr< ::vrep_common::simRosAuxiliaryConsoleShowRequest const> simRosAuxiliaryConsoleShowRequestConstPtr;


template <class ContainerAllocator>
struct simRosAuxiliaryConsoleShowResponse_ {
  typedef simRosAuxiliaryConsoleShowResponse_<ContainerAllocator> Type;

  simRosAuxiliaryConsoleShowResponse_()
  : result(0)
  {
  }

  simRosAuxiliaryConsoleShowResponse_(const ContainerAllocator& _alloc)
  : result(0)
  {
  }

  typedef int32_t _result_type;
  int32_t result;


  typedef boost::shared_ptr< ::vrep_common::simRosAuxiliaryConsoleShowResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosAuxiliaryConsoleShowResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosAuxiliaryConsoleShowResponse
typedef  ::vrep_common::simRosAuxiliaryConsoleShowResponse_<std::allocator<void> > simRosAuxiliaryConsoleShowResponse;

typedef boost::shared_ptr< ::vrep_common::simRosAuxiliaryConsoleShowResponse> simRosAuxiliaryConsoleShowResponsePtr;
typedef boost::shared_ptr< ::vrep_common::simRosAuxiliaryConsoleShowResponse const> simRosAuxiliaryConsoleShowResponseConstPtr;

struct simRosAuxiliaryConsoleShow
{

typedef simRosAuxiliaryConsoleShowRequest Request;
typedef simRosAuxiliaryConsoleShowResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct simRosAuxiliaryConsoleShow
} // namespace vrep_common

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosAuxiliaryConsoleShowRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosAuxiliaryConsoleShowRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosAuxiliaryConsoleShowRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "33c6dd3e6b401d1a7bd21ef7d25dc9e5";
  }

  static const char* value(const  ::vrep_common::simRosAuxiliaryConsoleShowRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x33c6dd3e6b401d1aULL;
  static const uint64_t static_value2 = 0x7bd21ef7d25dc9e5ULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosAuxiliaryConsoleShowRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosAuxiliaryConsoleShowRequest";
  }

  static const char* value(const  ::vrep_common::simRosAuxiliaryConsoleShowRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosAuxiliaryConsoleShowRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
int32 consoleHandle\n\
uint8 showState\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosAuxiliaryConsoleShowRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosAuxiliaryConsoleShowRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosAuxiliaryConsoleShowResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosAuxiliaryConsoleShowResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosAuxiliaryConsoleShowResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "034a8e20d6a306665e3a5b340fab3f09";
  }

  static const char* value(const  ::vrep_common::simRosAuxiliaryConsoleShowResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x034a8e20d6a30666ULL;
  static const uint64_t static_value2 = 0x5e3a5b340fab3f09ULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosAuxiliaryConsoleShowResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosAuxiliaryConsoleShowResponse";
  }

  static const char* value(const  ::vrep_common::simRosAuxiliaryConsoleShowResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosAuxiliaryConsoleShowResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 result\n\
\n\
\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosAuxiliaryConsoleShowResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosAuxiliaryConsoleShowResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosAuxiliaryConsoleShowRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.consoleHandle);
    stream.next(m.showState);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosAuxiliaryConsoleShowRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosAuxiliaryConsoleShowResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosAuxiliaryConsoleShowResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<vrep_common::simRosAuxiliaryConsoleShow> {
  static const char* value() 
  {
    return "0441070f5e93cc5cd766aa59d6093443";
  }

  static const char* value(const vrep_common::simRosAuxiliaryConsoleShow&) { return value(); } 
};

template<>
struct DataType<vrep_common::simRosAuxiliaryConsoleShow> {
  static const char* value() 
  {
    return "vrep_common/simRosAuxiliaryConsoleShow";
  }

  static const char* value(const vrep_common::simRosAuxiliaryConsoleShow&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosAuxiliaryConsoleShowRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "0441070f5e93cc5cd766aa59d6093443";
  }

  static const char* value(const vrep_common::simRosAuxiliaryConsoleShowRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosAuxiliaryConsoleShowRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosAuxiliaryConsoleShow";
  }

  static const char* value(const vrep_common::simRosAuxiliaryConsoleShowRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosAuxiliaryConsoleShowResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "0441070f5e93cc5cd766aa59d6093443";
  }

  static const char* value(const vrep_common::simRosAuxiliaryConsoleShowResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosAuxiliaryConsoleShowResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosAuxiliaryConsoleShow";
  }

  static const char* value(const vrep_common::simRosAuxiliaryConsoleShowResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // VREP_COMMON_SERVICE_SIMROSAUXILIARYCONSOLESHOW_H

