/* Auto-generated by genmsg_cpp for file /home/jackal/ros_workspace/src/vrep/vrep_common/srv/simRosSetObjectSelection.srv */
#ifndef VREP_COMMON_SERVICE_SIMROSSETOBJECTSELECTION_H
#define VREP_COMMON_SERVICE_SIMROSSETOBJECTSELECTION_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace vrep_common
{
template <class ContainerAllocator>
struct simRosSetObjectSelectionRequest_ {
  typedef simRosSetObjectSelectionRequest_<ContainerAllocator> Type;

  simRosSetObjectSelectionRequest_()
  : handles()
  {
  }

  simRosSetObjectSelectionRequest_(const ContainerAllocator& _alloc)
  : handles(_alloc)
  {
  }

  typedef std::vector<int32_t, typename ContainerAllocator::template rebind<int32_t>::other >  _handles_type;
  std::vector<int32_t, typename ContainerAllocator::template rebind<int32_t>::other >  handles;


  typedef boost::shared_ptr< ::vrep_common::simRosSetObjectSelectionRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosSetObjectSelectionRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosSetObjectSelectionRequest
typedef  ::vrep_common::simRosSetObjectSelectionRequest_<std::allocator<void> > simRosSetObjectSelectionRequest;

typedef boost::shared_ptr< ::vrep_common::simRosSetObjectSelectionRequest> simRosSetObjectSelectionRequestPtr;
typedef boost::shared_ptr< ::vrep_common::simRosSetObjectSelectionRequest const> simRosSetObjectSelectionRequestConstPtr;


template <class ContainerAllocator>
struct simRosSetObjectSelectionResponse_ {
  typedef simRosSetObjectSelectionResponse_<ContainerAllocator> Type;

  simRosSetObjectSelectionResponse_()
  : result(0)
  {
  }

  simRosSetObjectSelectionResponse_(const ContainerAllocator& _alloc)
  : result(0)
  {
  }

  typedef int32_t _result_type;
  int32_t result;


  typedef boost::shared_ptr< ::vrep_common::simRosSetObjectSelectionResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::vrep_common::simRosSetObjectSelectionResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct simRosSetObjectSelectionResponse
typedef  ::vrep_common::simRosSetObjectSelectionResponse_<std::allocator<void> > simRosSetObjectSelectionResponse;

typedef boost::shared_ptr< ::vrep_common::simRosSetObjectSelectionResponse> simRosSetObjectSelectionResponsePtr;
typedef boost::shared_ptr< ::vrep_common::simRosSetObjectSelectionResponse const> simRosSetObjectSelectionResponseConstPtr;

struct simRosSetObjectSelection
{

typedef simRosSetObjectSelectionRequest Request;
typedef simRosSetObjectSelectionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct simRosSetObjectSelection
} // namespace vrep_common

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetObjectSelectionRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetObjectSelectionRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosSetObjectSelectionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "1b24af430705cefc484ff6cc1c5669ad";
  }

  static const char* value(const  ::vrep_common::simRosSetObjectSelectionRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x1b24af430705cefcULL;
  static const uint64_t static_value2 = 0x484ff6cc1c5669adULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosSetObjectSelectionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetObjectSelectionRequest";
  }

  static const char* value(const  ::vrep_common::simRosSetObjectSelectionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosSetObjectSelectionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
int32[] handles\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosSetObjectSelectionRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetObjectSelectionResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::vrep_common::simRosSetObjectSelectionResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::vrep_common::simRosSetObjectSelectionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "034a8e20d6a306665e3a5b340fab3f09";
  }

  static const char* value(const  ::vrep_common::simRosSetObjectSelectionResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x034a8e20d6a30666ULL;
  static const uint64_t static_value2 = 0x5e3a5b340fab3f09ULL;
};

template<class ContainerAllocator>
struct DataType< ::vrep_common::simRosSetObjectSelectionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetObjectSelectionResponse";
  }

  static const char* value(const  ::vrep_common::simRosSetObjectSelectionResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::vrep_common::simRosSetObjectSelectionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 result\n\
\n\
\n\
";
  }

  static const char* value(const  ::vrep_common::simRosSetObjectSelectionResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::vrep_common::simRosSetObjectSelectionResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosSetObjectSelectionRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.handles);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosSetObjectSelectionRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::vrep_common::simRosSetObjectSelectionResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct simRosSetObjectSelectionResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<vrep_common::simRosSetObjectSelection> {
  static const char* value() 
  {
    return "e00e479c133a7c8d25d2f7b4d86be540";
  }

  static const char* value(const vrep_common::simRosSetObjectSelection&) { return value(); } 
};

template<>
struct DataType<vrep_common::simRosSetObjectSelection> {
  static const char* value() 
  {
    return "vrep_common/simRosSetObjectSelection";
  }

  static const char* value(const vrep_common::simRosSetObjectSelection&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosSetObjectSelectionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e00e479c133a7c8d25d2f7b4d86be540";
  }

  static const char* value(const vrep_common::simRosSetObjectSelectionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosSetObjectSelectionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetObjectSelection";
  }

  static const char* value(const vrep_common::simRosSetObjectSelectionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<vrep_common::simRosSetObjectSelectionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e00e479c133a7c8d25d2f7b4d86be540";
  }

  static const char* value(const vrep_common::simRosSetObjectSelectionResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<vrep_common::simRosSetObjectSelectionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "vrep_common/simRosSetObjectSelection";
  }

  static const char* value(const vrep_common::simRosSetObjectSelectionResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // VREP_COMMON_SERVICE_SIMROSSETOBJECTSELECTION_H

